@page "/Account/ForgotPassword"

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle Title="Forgotten password" />

<StatusMessage />

<EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator />

    <MudText Typo="Typo.body1">Enter your email.</MudText>

    <MudGrid>
        <MudItem md="12">
            <MudStaticTextField @bind-Value="Input.Email" For="@(() => Input.Email)" 
                Label="Email" Placeholder="name@example.com"
                autocomplete="username" aria-required="true" />
        </MudItem>
        <MudItem md="12">
            <MudStaticButton Variant="Variant.Filled" Color="Color.Primary" FullWidth FormAction="FormAction.Submit">Reset password</MudStaticButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        if (await UserManager.FindByEmailAsync(Input.Email) is ApplicationUser user
            && await UserManager.IsEmailConfirmedAsync(user))
        {
            var callbackUrl = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
                new Dictionary<string, object?>
                {
                    ["userId"] = user.Id,
                    ["code"] = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(
                        await UserManager.GeneratePasswordResetTokenAsync(user)))
                });

            await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));
        }

        RedirectManager.RedirectToCurrentPageWithStatus("Password reset email sent. Please check your email.", HttpContext);
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
