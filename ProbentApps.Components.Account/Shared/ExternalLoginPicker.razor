@inject SignInManager<ApplicationUser> SignInManager

@if (externalLogins.Length == 0)
{
    <MudAlert Severity="Severity.Warning">There are no external authentication services available.</MudAlert>
}
else
{
    <PostForm Action="Account/PerformExternalLogin">
        <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
        <MudStack Row Wrap="Wrap.Wrap">
            @foreach (var provider in externalLogins)
            {
                <MudTooltip Text=@($"Log in using your {provider.DisplayName} account")>
                    <MudButton ButtonType="ButtonType.Submit" name="provider" value="@provider.Name">@provider.DisplayName</MudButton>
                </MudTooltip>
            }
        </MudStack>
    </PostForm>
}

@code {
    private AuthenticationScheme[] externalLogins = default!;

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync() => externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
}
